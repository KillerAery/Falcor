from falcor import *

def WindowsPath(s):
    return ("C:/Project/Falcor/Media/") + s

def render_graph_SSSRenderGraph():
    g = RenderGraph('SSSRenderer')
    loadRenderPassLibrary('AccumulatePass.dll')
    loadRenderPassLibrary('BSDFViewer.dll')
    loadRenderPassLibrary('Antialiasing.dll')
    loadRenderPassLibrary('BlitPass.dll')
    loadRenderPassLibrary('CSM.dll')
    loadRenderPassLibrary('DebugPasses.dll')
    loadRenderPassLibrary('PathTracer.dll')
    loadRenderPassLibrary('DepthPass.dll')
    loadRenderPassLibrary('DiffusePass.dll')
    loadRenderPassLibrary('DLSSPass.dll')
    loadRenderPassLibrary('ErrorMeasurePass.dll')
    loadRenderPassLibrary('SimplePostFX.dll')
    loadRenderPassLibrary('FLIPPass.dll')
    loadRenderPassLibrary('ForwardLightingPass.dll')
    loadRenderPassLibrary('GBuffer.dll')
    loadRenderPassLibrary('WhittedRayTracer.dll')
    loadRenderPassLibrary('ImageLoader.dll')
    loadRenderPassLibrary('MegakernelPathTracer.dll')
    loadRenderPassLibrary('MinimalPathTracer.dll')
    loadRenderPassLibrary('ModulateIllumination.dll')
    loadRenderPassLibrary('NRDPass.dll')
    loadRenderPassLibrary('PassLibraryTemplate.dll')
    loadRenderPassLibrary('PixelInspectorPass.dll')
    loadRenderPassLibrary('SkyBox.dll')
    loadRenderPassLibrary('RTXDIPass.dll')
    loadRenderPassLibrary('RTXGIPass.dll')
    loadRenderPassLibrary('SceneDebugger.dll')
    loadRenderPassLibrary('SDFEditor.dll')
    loadRenderPassLibrary('SpecularPass.dll')
    loadRenderPassLibrary('SSAO.dll')
    loadRenderPassLibrary('SSSPass.dll')
    loadRenderPassLibrary('SVGFPass.dll')
    loadRenderPassLibrary('TemporalDelayPass.dll')
    loadRenderPassLibrary('TestPasses.dll')
    loadRenderPassLibrary('ToneMapper.dll')
    loadRenderPassLibrary('Utils.dll')
    FXAA = createPass('FXAA', {'qualitySubPix': 0.75, 'qualityEdgeThreshold': 0.16599999368190765, 'qualityEdgeThresholdMin': 0.08330000191926956, 'earlyOut': True})
    g.addPass(FXAA, 'FXAA')
    CSM = createPass('CSM', {'mapSize': uint2(4096,4096), 'visibilityBufferSize': uint2(0,0), 'cascadeCount': 1, 'visibilityMapBitsPerChannel': 32, 'kSdsmReadbackLatency': 1, 'blurWidth': 5, 'blurSigma': 2.0})
    g.addPass(CSM, 'CSM')
    DepthPass = createPass('DepthPass', {'depthFormat': ResourceFormat.D32Float, 'useAlphaTest': True})
    g.addPass(DepthPass, 'DepthPass')
    DiffusePass = createPass('DiffusePass')
    g.addPass(DiffusePass, 'DiffusePass')
    SpecularPass = createPass('SpecularPass')
    g.addPass(SpecularPass, 'SpecularPass')
    SSAO = createPass('SSAO', {'aoMapSize': uint2(1024,1024), 'kernelSize': 16, 'noiseSize': uint2(16,16), 'radius': 0.10000000149011612, 'distribution': SampleDistribution.CosineHammersley, 'blurWidth': 5, 'blurSigma': 2.0})
    g.addPass(SSAO, 'SSAO')
    SSSPass = createPass('SSSPass', {'uScale': 0.00019999999494757503, 'vScale': 0.00019999999494757503, 'd': 0.10000000149011612})
    g.addPass(SSSPass, 'SSSPass')
    BlitPass = createPass('BlitPass', {'filter': SamplerFilter.Linear})
    g.addPass(BlitPass, 'BlitPass')
    ToneMapper = createPass('ToneMapper', {'outputSize': IOSize.Default, 'useSceneMetadata': True, 'exposureCompensation': 0.0, 'autoExposure': False, 'filmSpeed': 100.0, 'whiteBalance': False, 'whitePoint': 6500.0, 'operator': ToneMapOp.Aces, 'clamp': True, 'whiteMaxLuminance': 1.0, 'whiteScale': 11.199999809265137, 'fNumber': 1.0, 'shutter': 1.0, 'exposureMode': ExposureMode.AperturePriority})
    g.addPass(ToneMapper, 'ToneMapper')
    g.addEdge('DiffusePass.dst', 'SSSPass.texDiffuse')
    g.addEdge('DepthPass.depth', 'SSSPass.depthBuffer')
    g.addEdge('DepthPass.depth', 'CSM.depth')
    g.addEdge('CSM.visibility', 'DiffusePass.visBuffer')
    g.addEdge('DepthPass.depth', 'DiffusePass.depthBuffer')
    g.addEdge('ToneMapper.dst', 'BlitPass.src')
    g.addEdge('FXAA.dst', 'ToneMapper.src')
    g.addEdge('SSSPass.dst', 'FXAA.src')
    g.markOutput('BlitPass.dst')
    return g

SSSRenderer = render_graph_SSSRenderGraph()
try: m.addGraph(SSSRenderer)
except NameError: None
